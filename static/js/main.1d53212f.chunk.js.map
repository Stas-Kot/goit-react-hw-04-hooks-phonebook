{"version":3,"sources":["components/PhonebookForm/PhonebookForm.styles.jsx","components/PhonebookForm/PhonebookForm.jsx","components/ContactListItem/ContactListItem.styles.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/SearchContact/SearchContact.styles.jsx","components/SearchContact/SearchContact.jsx","App.js","index.js"],"names":["Form","BtnAddContact","Input","PhonebookForm","handleSubmit","useState","name","setName","number","setNumber","handleSetUserInfo","e","target","value","reset","autocomplete","onSubmit","preventDefault","onChange","type","pattern","title","required","ContactItem","DeleteBtn","ContactListItem","deleteContact","onClick","ContactList","contacts","handleDelete","map","id","SearchTitle","SearchContact","inputChange","App","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","contact","uuidv4","find","savedContact","toast","error","success","normalizedFilter","toLowerCase","trim","includes","getFiltredContacts","contactId","position","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d53212f.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form`\n  width: 350px;\n  border: 2px solid black;\n  padding: 30px 15px;\n\n  & label {\n    font-weight: 500;\n  }\n  & p {\n    margin: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const BtnAddContact = styled.button`\n  display: block;\n  border-radius: 8px;\n  background-color: #fff;\n  color: black;\n  font-weight: 500;\n  padding: 5px 10px;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n  border-color: transparent;\n  border: 1px solid grey;\n  cursor: pointer;\n  &:hover {\n    background-color: #6ea2de;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 30px;\n  &:focus {\n    border: 2px solid #6ea2de;\n    box-shadow: 0px 0px 10px #6ea2de;\n    outline: none;\n  }\n`;\n","import { useState } from 'react';\nimport { Form, BtnAddContact, Input } from './PhonebookForm.styles';\n\nfunction PhonebookForm({ handleSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSetUserInfo = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n    handleSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form autocomplete=\"off\" onSubmit={handleAddContact}>\n      <label>\n        <p>Name</p>\n        <Input\n          onChange={handleSetUserInfo}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          autocomplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        <p>Number</p>\n        <Input\n          onChange={handleSetUserInfo}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          autocomplete=\"off\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n    </Form>\n  );\n}\n\nexport default PhonebookForm;\n","import styled from '@emotion/styled/macro';\n\nexport const ContactItem = styled.li`\n  width: 400px;\n  font-size: 20px;\n  font-weight: 500;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 30px;\n  margin-right: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItem, DeleteBtn } from './ContactListItem.styles';\n\nexport default function ContactListItem({ name, number, deleteContact }) {\n  return (\n    <ContactItem>\n      {name}: {number}\n      <DeleteBtn type=\"button\" onClick={deleteContact}>\n        Delete\n      </DeleteBtn>\n    </ContactItem>\n  );\n}\n\nContactListItem.propTypes = {\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\n\nexport default function ContactList({ contacts, handleDelete }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => handleDelete(id)}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  handleDelete: PropTypes.func,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const SearchTitle = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { SearchTitle } from './SearchContact.styles';\n\nexport default function SearchContact({ value, inputChange }) {\n  return (\n    <label>\n      <SearchTitle>Find contacts by name</SearchTitle>\n      <input type=\"text\" value={value} onChange={inputChange} />\n    </label>\n  );\n}\nSearchContact.propTypes = {\n  value: PropTypes.string,\n  inputChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport SearchContact from 'components/SearchContact/SearchContact';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    if (contacts.find(savedContact => savedContact.name === name)) {\n      toast.error(`${name} is already in contacts`);\n    } else {\n      setContacts(contacts => [...contacts, contact]);\n      toast.success('New contact added successfully!');\n    }\n  };\n\n  const handleSearch = e => {\n    setFilter(e.target.value);\n  };\n\n  const handleDelete = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const getFiltredContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <PhonebookForm handleSubmit={formSubmitHandler} />\n\n      <h2>Contacts</h2>\n      <SearchContact value={filter} inputChange={handleSearch} />\n      <ContactList\n        contacts={getFiltredContacts()}\n        handleDelete={handleDelete}\n      />\n      <ToastContainer position=\"top-center\" autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}